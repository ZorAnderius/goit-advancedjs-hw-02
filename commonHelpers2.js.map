{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    calendar: document.querySelector('input[type=\"text\"]'),\n    startBtn: document.querySelector('[data-start]'),\n    timerFields: document.querySelectorAll('.field .value'),\n}\nlet interval_id = -1;\nlet date = null;\n\nconst options = {\n    theme:'dark',\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose,\n};\n\n\nconst stopIntervalOpts = {\n    theme: 'dark',\n    icon: 'icon-person',\n    title: 'Hey',\n    message: 'Do you want to stop current countdown and start new?',\n    position: 'center',\n    progressBarColor: 'rgb(0, 255, 184)',\n    buttons: [\n        ['<button data-ok>Ok</button>', okToast, true], \n        ['<button>Close</button>', cancelToast]\n        ],\n}\n\nconst fp = flatpickr(refs.calendar, options);\n\n\n/**\n * check if selected date is valid and add listener \n * to start button or reset date when calendar closed\n * \n * @param {Array} selectedDates of dates\n * @returns undefined\n */\nfunction onClose(selectedDates) {\n    if (date && date === selectedDates[0]){\n        return;\n    };\n    if (selectedDates[0] < Date.now()) {\n        iziToast.error({\n            message: \"Please choose a date in the future\",\n            position: \"topRight\",\n            timeout: 2000\n            \n        })\n    } else {\n        if (date && date !== selectedDates[0]) {\n            iziToast.show(stopIntervalOpts);\n            return;\n        }\n        refs.startBtn.disabled = false;\n        refs.startBtn.addEventListener('click', handlerStartCountdown);\n    }\n}\n\n/**\n * hendler event of click start button or when user wants to change date\n * @param {event || null} e \n */\nfunction handlerStartCountdown(e = null) {\n    if(e) e.target.disabled = true;\n    const [selectedDate] = refs.calendar._flatpickr.selectedDates;\n    date = selectedDate;\n    const delta = selectedDate - Date.now();\n    drawCountdown(convertMs(delta));\n}\n\n/**convert date from millisecond's format into days, hours, minutes and seconds format\n * \n * @param {number} ms \n * @returns {Object}\n */\nfunction convertMs(ms) {\n// Number of milliseconds per unit of time\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\n// Remaining days\nconst days = Math.floor(ms / day);\n// Remaining hours\nconst hours = Math.floor((ms % day) / hour);\n// Remaining minutes\nconst minutes = Math.floor(((ms % day) % hour) / minute);\n// Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    \nreturn { days, hours, minutes, seconds };\n}\n\n/**convert numbers to string if number less then 10, so it needs to add 0 for begin,\n * for example, '09' or '10'\n * \n * @param {number} value \n * @returns {string}\n */\nfunction addLeadingZero(value) {\n    return value ? String(value).padStart(2, 0) : '00';\n}\n\n/**draw days, hours, minutes and seconds on the HTML\n * and their changes every 1 second\n * \n * @param {Object} time \n */\nfunction drawCountdown(time) {\n    let { days, hours, minutes, seconds } = time;\n    interval_id = setInterval(() => {\n        [days, hours, minutes, seconds]\n            .forEach((value, index) => refs.timerFields[index].textContent = addLeadingZero(value));\n        if (!seconds && !minutes && !hours && !days) {\n            clearInterval(interval_id);\n            interval_id = -1;\n            date = null;\n\n            iziToast.success({\n            message: \"Countdown has finished. You can selected new time.\",\n            position: \"topRight\",\n            timeout: 5000\n    })\n        }\n\n        if (seconds) {\n                seconds--;\n            } else if (seconds === 0 && minutes || hours || days) {\n                seconds = 59;\n                if (minutes) {\n                    minutes--;\n                } else if (minutes === 0 && hours || days) {\n                    minutes = 59;\n                    if (hours) {\n                        hours--;\n                    } else if (hours === 0 && days) {\n                        hours = 23;\n                        days--;\n                    }\n                }\n            }\n    }, 1000);\n}\n\n/**\n * delete current interval, remove listener form StartBtn and redraw timer for '00'\n */\nfunction resetDate() {\n    if (~interval_id) {\n        clearInterval(interval_id);\n        interval_id = -1;\n        refs.startBtn.removeEventListener('click', handlerStartCountdown);\n        refs.startBtn.disabled = true;\n        refs.timerFields.forEach(field => field.textContent = addLeadingZero(0));\n    }\n}\n\n/**restart countdown when ok button was confirmed.\n * \n * @param {Object} instance \n * @param {HTMLDivElement} toast \n */\nfunction okToast(instance, toast) {\n            resetDate();\n            iziToast.info({\n                        pauseOnHover: null,\n                        message: \"Please, waiting for update timer\",\n                        position: \"center\",\n                        overlay: true,\n                        timeout: 2000\n            });\n            handlerStartCountdown();\n            instance.hide({\n                transitionOut: 'fadeOutUp',\n            }, toast, 'buttonName');\n        }\n\n/**close Toast notification\n * \n * @param {Object} instance \n * @param {HTMLDivElement} toast \n */\nfunction cancelToast(instance, toast) {\n            instance.hide({\n                transitionOut: 'fadeOutUp',\n            }, toast, 'buttonName');\n        }\n\n"],"names":["refs","interval_id","date","options","onClose","stopIntervalOpts","okToast","cancelToast","flatpickr","selectedDates","iziToast","handlerStartCountdown","e","selectedDate","delta","drawCountdown","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","time","index","resetDate","field","instance","toast"],"mappings":"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"}