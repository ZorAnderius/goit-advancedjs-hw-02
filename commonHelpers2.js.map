{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    calendar: document.querySelector('input[type=\"text\"]'),\n    startBtn: document.querySelector('[data-start]'),\n    timerFields: document.querySelectorAll('.field .value'),\n}\nlet interval_id = -1;\nlet date = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose,\n};\n\nconst fp = flatpickr(refs.calendar, options);\n\nfunction onClose(selectedDates) {\n    if (date && date !== selectedDates[0]) {\n        resetDate();\n    }\n    if (selectedDates[0] < Date.now()) {\n        iziToast.error({\n            message: \"Please choose a date in the future\",\n            position: \"topRight\",\n            timeout: 2000\n    })\n    } else {\n        date = selectedDates[0];\n            refs.startBtn.disabled = false;\n            refs.startBtn.addEventListener('click', handlerStartCountdown);\n    }\n}\n\nfunction handlerStartCountdown(e) {\n    e.target.disabled = true;\n    const [selectedDate] = refs.calendar._flatpickr.selectedDates;\n    const delta = selectedDate - Date.now();\n    drawCountdown(convertMs(delta));\n}\n\n\nfunction convertMs(ms) {\n// Number of milliseconds per unit of time\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\n// Remaining days\nconst days = Math.floor(ms / day);\n// Remaining hours\nconst hours = Math.floor((ms % day) / hour);\n// Remaining minutes\nconst minutes = Math.floor(((ms % day) % hour) / minute);\n// Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    \nreturn { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value ? String(value).padStart(2, 0) : '00';\n}\n\nfunction drawCountdown(time) {\n    let { days, hours, minutes, seconds } = time;\n    interval_id = setInterval(() => {\n        [days, hours, minutes, seconds]\n            .forEach((value, index) => refs.timerFields[index].textContent = addLeadingZero(value));\n        if (!seconds && !minutes && !hours && !days) {\n            clearInterval(interval_id);\n            interval_id = -1;\n\n            iziToast.success({\n            message: \"Countdown has finished. You can selected new time.\",\n            position: \"topRight\",\n            timeout: 5000\n    })\n        }\n\n        if (seconds) {\n                seconds--;\n            } else if (seconds === 0 && minutes || hours || days) {\n                seconds = 59;\n                if (minutes) {\n                    minutes--;\n                } else if (minutes === 0 && hours || days) {\n                    minutes = 59;\n                    if (hours) {\n                        hours--;\n                    } else if (hours === 0 && days) {\n                        hours = 23;\n                        days--;\n                    }\n                }\n            }\n    }, 1000);\n}\n\nfunction resetDate() {\n    if (~interval_id) {\n        clearInterval(interval_id);\n        iziToast.info({\n            message: \"Countdown was stopped. Select new time.\",\n            position: \"topRight\",\n            timeout: 5000\n        });\n\n        interval_id = -1;\n        refs.startBtn.removeEventListener('click', handlerStartCountdown);\n        refs.startBtn.disabled = true;\n        refs.timerFields.forEach(field => field.textContent = addLeadingZero(0));\n    }\n    \n}\n\n\n\n"],"names":["refs","interval_id","date","options","onClose","flatpickr","selectedDates","resetDate","iziToast","handlerStartCountdown","e","selectedDate","delta","drawCountdown","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","time","index","field"],"mappings":"+IAMA,MAAMA,EAAO,CACT,SAAU,SAAS,cAAc,oBAAoB,EACrD,SAAU,SAAS,cAAc,cAAc,EAC/C,YAAa,SAAS,iBAAiB,eAAe,CAC1D,EACA,IAAIC,EAAc,GACdC,EAAO,KAEX,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAAC,CACJ,EAEWC,EAAUL,EAAK,SAAUG,CAAO,EAE3C,SAASC,EAAQE,EAAe,CACxBJ,GAAQA,IAASI,EAAc,CAAC,GAChCC,IAEAD,EAAc,CAAC,EAAI,KAAK,IAAG,EAC3BE,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,WACV,QAAS,GACrB,CAAK,GAEGN,EAAOI,EAAc,CAAC,EAClBN,EAAK,SAAS,SAAW,GACzBA,EAAK,SAAS,iBAAiB,QAASS,CAAqB,EAEzE,CAEA,SAASA,EAAsBC,EAAG,CAC9BA,EAAE,OAAO,SAAW,GACpB,KAAM,CAACC,CAAY,EAAIX,EAAK,SAAS,WAAW,cAC1CY,EAAQD,EAAe,KAAK,IAAG,EACrCE,EAAcC,EAAUF,CAAK,CAAC,CAClC,CAGA,SAASE,EAAUC,EAAI,CAQvB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAE7CI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAEtE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACtC,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAQ,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,EAAI,IAClD,CAEA,SAASR,EAAcS,EAAM,CACzB,GAAI,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKG,EACxCrB,EAAc,YAAY,IAAM,CAC5B,CAACe,EAAMC,EAAOC,EAASC,CAAO,EACzB,QAAQ,CAACE,EAAOE,IAAUvB,EAAK,YAAYuB,CAAK,EAAE,YAAcH,EAAeC,CAAK,CAAC,EACtF,CAACF,GAAW,CAACD,GAAW,CAACD,GAAS,CAACD,IACnC,cAAcf,CAAW,EACzBA,EAAc,GAEdO,EAAS,QAAQ,CACjB,QAAS,qDACT,SAAU,WACV,QAAS,GACrB,CAAK,GAGOW,EACIA,KACOA,IAAY,GAAKD,GAAWD,GAASD,KAC5CG,EAAU,GACND,EACAA,KACOA,IAAY,GAAKD,GAASD,KACjCE,EAAU,GACND,EACAA,IACOA,IAAU,GAAKD,IACtBC,EAAQ,GACRD,MAInB,EAAE,GAAI,CACX,CAEA,SAAST,GAAY,CACb,CAACN,IACD,cAAcA,CAAW,EACzBO,EAAS,KAAK,CACV,QAAS,0CACT,SAAU,WACV,QAAS,GACrB,CAAS,EAEDP,EAAc,GACdD,EAAK,SAAS,oBAAoB,QAASS,CAAqB,EAChET,EAAK,SAAS,SAAW,GACzBA,EAAK,YAAY,QAAQwB,GAASA,EAAM,YAAcJ,EAAe,CAAC,CAAC,EAG/E"}